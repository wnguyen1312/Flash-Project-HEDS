# 	Runtime parameters for the MHD Current Sheet problem.
#	Please also look at default.par for more runtime parameters in the object directory

#	Specific heats ratio
gamma           = 1.66666666666666667

#       Grid dimensionality and geometry
geometry        = "cartesian"

#       Size of computational volume
xmin            = 0.
xmax            = 1
ymin            = -1
ymax            = 1

#	Problem parameters
beta            = 120   # plasma beta
B0              = 0.1  
y0              = 0.05
ca              = 0.1
theta           = 1.04719755
vy0             = 0.01
sigma           = 0.1

#	Units (none, SI or CGS)
UnitSystem  	= "none"

#       Boundary conditions (code -22 is periodic)
xl_boundary_type = "periodic"
xr_boundary_type = "periodic"
yl_boundary_type = "periodic"
yr_boundary_type = "periodic"


#       Simulation (grid, time, I/O) parameters
run_comment     = "2D Current Sheet problem"
log_file        = "currentSheet_mhd_2d.log"
basenm          = "currentSheet_mhd_2d_"
restart         = .false.
#checkPointFileNumber=1
#plotFileNumber  = 1
nend            = 100000000
tmax            = 8.
cfl             = 0.8
plot_var_1	= "dens"
plot_var_2	= "vecz"
plot_var_3	= "curz"
plot_var_4	= "magx"
plot_var_5	= "magy"


convertToConsvdInMeshInterp = .true.
checkpointFileIntervalTime = 0.5
plotFileIntervalTime = 0.1
#checkpointFileIntervalStep = 10


#	AMR parameters
#nblockx	= 1
#nblocky	= 1
lrefine_min	= 1
lrefine_max     = 6 
nrefs           = 2
refine_var_1    = "dens"
refine_var_2	= "magy"
eintSwitch	= 1.e-6


#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.

## -------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE UNSPLIT STAGGERED MESH MHD SOLVER  ##
#	I. INTERPOLATION SCHEME:
order		= 2      # Interpolation order (first/second/third/fifth order)
slopeLimiter    = "mc"   # Slope limiters (minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.     # Slope parameter for the "limited" slope by Toro
charLimiting	= .true. # Characteristic limiting vs. Primitive limiting

use_avisc	= .false. # use artificial viscosity (originally for PPM)
cvisc		= 0.1     # coefficient for artificial viscosity
use_flattening	= .false. # use flattening (dissipative) (originally for PPM)
use_steepening	= .false. # use contact steepening (originally for PPM)
use_upwindTVD	= .false. # use upwind biased TVD slope for PPM (need nguard=6)

#	II. MAGNETIC(B) AND ELECTRIC(E) FIELDS:
E_modification	= .true.           # High order algorithm for E-field construction
energyFix	= .true.           # Update magnetic energy using staggered B-fields
ForceHydroLimit	= .false.          # Pure Hydro Limit (B=0)
prolMethod      = "injection_prol" # Prolongation method (injecton_prol, balsara_prol)


#	III. RIEMANN SOLVERS:
RiemannSolver	= "Roe"       # Roe, HLL, HLLC, HLLD, LLF, Marquina
entropy         = .false.     # Entropy fix for the Roe solver


#	IV. STRONG SHOCK HANDELING SCHEME:
shockDetect	= .false.     # Shock Detect for numerical stability
## -------------------------------------------------------------##

## -------------------------------------------------------##
##       Resistive MHD parameters                         ##
dt_diff_factor  = 0.8

useMagneticResistivity	= .false.
resistivity 		= 1.0E-4 # magnetic Resistivity

useViscosity		= .false.
diff_visc_nu 		= 4.0E-4

useConductivity		= .false.
diff_constant           = 1.0E-2
## -------------------------------------------------------##

## ---------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE SUPER-TIME-STEPPING (STS) ALGORITHM  ##
##  NOTE: For details on using STS runtime parameters, please     ##
##        refer to user's guide (Driver chapter).                 ##
useSTS                  = .false.
useSTSforDiffusion	= .false.
allowDtSTSDominate      = .false.

nstepTotalSTS           = 8
nuSTS                   = 0.02
## ---------------------------------------------------------------##


#	The parameters below are only necessary for the Uniform Grid
#iGridSize	= 256	#defined as nxb * iprocs
#jGridSize	= 256	#defined as nyb * jprocs
#kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 1	#number or procs in the i direction
jProcs		= 1	#number or procs in the j direction
kProcs		= 1	#number or procs in the k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.
